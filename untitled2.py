# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lwyML7VJiCzc3sFsXukrVea47OS2CI3X
"""

def mergeSort(lst):
    if len(lst) > 1:
        mid = len(lst) // 2
        left = lst[:mid]
        right = lst[mid:]

        mergeSort(left)
        mergeSort(right)

        i = 0
        j = 0
        k = 0

        while i < len(left) and j < len(right):
            if left[i] <= right[j]:
                lst[k] = left[i]
                i += 1
            else:
                lst[k] = right[j]
                j += 1
            k += 1

        while i < len(left):
            lst[k] = left[i]
            i += 1
            k += 1

        while j < len(right):
            lst[k] = right[j]
            j += 1
            k += 1

def min_value(lst):
    mergeSort(lst)
    return lst[0]

def max_value(lst):
    mergeSort(lst)
    return lst[-1]

lst = [1, 234, 22, 95, 53, 19, 11, 999]
mergeSort(lst)
print(lst)
print("Min Value:", min_value(lst))
print("Max Value:", max_value(lst))